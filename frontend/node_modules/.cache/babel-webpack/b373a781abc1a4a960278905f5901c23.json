{"ast":null,"code":"import _asyncToGenerator from \"/Users/dineshmerugumilli/Assignments/JokesApp/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { NetworkService } from 'src/app/services/network/network.service';\nimport { FindJokesComponent } from '../find-jokes/find-jokes.component';\nimport { ListJokesComponent } from '../list-jokes/list-jokes.component';\nimport { MainComponent } from './main.component';\ndescribe('MainComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientModule, MatSnackBarModule],\n      declarations: [MainComponent, FindJokesComponent, ListJokesComponent],\n      providers: [NetworkService]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MainComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should contain Find Jokes Component', () => {\n    const fixture = TestBed.createComponent(MainComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect(compiled.querySelector('find-jokes')).not.toBe(null);\n  });\n  it('should contain List Jokes Component', () => {\n    const fixture = TestBed.createComponent(MainComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect(compiled.querySelector('list-jokes')).not.toBe(null);\n  });\n  it('should render title', () => {\n    var _a;\n\n    const fixture = TestBed.createComponent(MainComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect((_a = compiled.querySelector('mat-toolbar span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('Chuck Norris Joke Bookmark');\n  });\n  it('should have Mat Toolbar color as #3f51b5', () => {\n    const matToolbar = fixture.nativeElement.querySelector('mat-toolbar');\n    const bgColor = matToolbar.background;\n    expect(bgColor).toBe('#3f51b5');\n  });\n});","map":{"version":3,"sources":["/Users/dineshmerugumilli/Assignments/JokesApp/frontend/src/app/components/main/main.component.spec.ts"],"names":["HttpClientModule","TestBed","MatSnackBarModule","NetworkService","FindJokesComponent","ListJokesComponent","MainComponent","describe","component","fixture","beforeEach","configureTestingModule","imports","declarations","providers","compileComponents","createComponent","componentInstance","detectChanges","it","compiled","nativeElement","expect","querySelector","not","toBe","_a","textContent","toContain","matToolbar","bgColor","background"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMT,OAAO,CAACU,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAACZ,gBAAD,EAAmBE,iBAAnB,CADwB;AAEjCW,MAAAA,YAAY,EAAE,CAACP,aAAD,EAAgBF,kBAAhB,EAAoCC,kBAApC,CAFmB;AAGjCS,MAAAA,SAAS,EAAE,CAACX,cAAD;AAHsB,KAA/B,EAKDY,iBALC,EAAN;AAMH,GAPS,EAAV;AAQAL,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGR,OAAO,CAACe,eAAR,CAAwBV,aAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACQ,iBAApB;AACAR,IAAAA,OAAO,CAACS,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,qCAAD,EAAwC,MAAM;AAC5C,UAAMV,OAAO,GAAGR,OAAO,CAACe,eAAR,CAAwBV,aAAxB,CAAhB;AACAG,IAAAA,OAAO,CAACS,aAAR;AACA,UAAME,QAAQ,GAAGX,OAAO,CAACY,aAAzB;AACAC,IAAAA,MAAM,CAACF,QAAQ,CAACG,aAAT,CAAuB,YAAvB,CAAD,CAAN,CAA6CC,GAA7C,CAAiDC,IAAjD,CAAsD,IAAtD;AACH,GALC,CAAF;AAMAN,EAAAA,EAAE,CAAC,qCAAD,EAAwC,MAAM;AAC5C,UAAMV,OAAO,GAAGR,OAAO,CAACe,eAAR,CAAwBV,aAAxB,CAAhB;AACAG,IAAAA,OAAO,CAACS,aAAR;AACA,UAAME,QAAQ,GAAGX,OAAO,CAACY,aAAzB;AACAC,IAAAA,MAAM,CAACF,QAAQ,CAACG,aAAT,CAAuB,YAAvB,CAAD,CAAN,CAA6CC,GAA7C,CAAiDC,IAAjD,CAAsD,IAAtD;AACH,GALC,CAAF;AAMAN,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5B,QAAIO,EAAJ;;AACA,UAAMjB,OAAO,GAAGR,OAAO,CAACe,eAAR,CAAwBV,aAAxB,CAAhB;AACAG,IAAAA,OAAO,CAACS,aAAR;AACA,UAAME,QAAQ,GAAGX,OAAO,CAACY,aAAzB;AACAC,IAAAA,MAAM,CAAC,CAACI,EAAE,GAAGN,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,CAAN,MAAsD,IAAtD,IAA8DG,EAAE,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuFA,EAAE,CAACC,WAA3F,CAAN,CAA8GC,SAA9G,CAAwH,4BAAxH;AACH,GANC,CAAF;AAOAT,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACjD,UAAMU,UAAU,GAAGpB,OAAO,CAACY,aAAR,CAAsBE,aAAtB,CAAoC,aAApC,CAAnB;AACA,UAAMO,OAAO,GAAGD,UAAU,CAACE,UAA3B;AACAT,IAAAA,MAAM,CAACQ,OAAD,CAAN,CAAgBL,IAAhB,CAAqB,SAArB;AACH,GAJC,CAAF;AAKH,CAxCO,CAAR","sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { NetworkService } from 'src/app/services/network/network.service';\nimport { FindJokesComponent } from '../find-jokes/find-jokes.component';\nimport { ListJokesComponent } from '../list-jokes/list-jokes.component';\nimport { MainComponent } from './main.component';\ndescribe('MainComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [HttpClientModule, MatSnackBarModule],\n            declarations: [MainComponent, FindJokesComponent, ListJokesComponent],\n            providers: [NetworkService]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(MainComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('should contain Find Jokes Component', () => {\n        const fixture = TestBed.createComponent(MainComponent);\n        fixture.detectChanges();\n        const compiled = fixture.nativeElement;\n        expect(compiled.querySelector('find-jokes')).not.toBe(null);\n    });\n    it('should contain List Jokes Component', () => {\n        const fixture = TestBed.createComponent(MainComponent);\n        fixture.detectChanges();\n        const compiled = fixture.nativeElement;\n        expect(compiled.querySelector('list-jokes')).not.toBe(null);\n    });\n    it('should render title', () => {\n        var _a;\n        const fixture = TestBed.createComponent(MainComponent);\n        fixture.detectChanges();\n        const compiled = fixture.nativeElement;\n        expect((_a = compiled.querySelector('mat-toolbar span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('Chuck Norris Joke Bookmark');\n    });\n    it('should have Mat Toolbar color as #3f51b5', () => {\n        const matToolbar = fixture.nativeElement.querySelector('mat-toolbar');\n        const bgColor = matToolbar.background;\n        expect(bgColor).toBe('#3f51b5');\n    });\n});\n"]},"metadata":{},"sourceType":"module"}